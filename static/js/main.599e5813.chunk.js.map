{"version":3,"sources":["RecipesDB.js","components/Ingredient.jsx","components/IngredientList.jsx","components/Recipe.jsx","components/RecipeList.jsx","components/IngredientEdit.jsx","components/RecipeEdit.jsx","components/App.jsx","index.js"],"names":["recipes","id","name","cookingTime","servings","instructions","ingredients","amount","Ingredient","props","IngredientList","ingredientList","map","ingredient","Recipe","React","useContext","MyContext","handleSetRecipeId","handleRecipeDelete","className","onClick","RecipeList","recipe","handleRecipeAdd","IngredientEdit","removeIngredient","handleChange","change","newIngredient","handleIngredientChange","type","onChange","e","target","value","RecipeEdit","handleRecipeChange","newRecipe","handleIgredientChange","newIngredientList","editIngredientIndex","findIndex","i","filter","recipeIngredient","undefined","parseInt","uuidv4","LOCAL_STORAGE_KEY","createContext","App","useState","selectRecipeId","setSelectRecipeId","recipeProps","setRecipes","selectedRecipe","find","contextValue","newRecipeList","editRecipeIndex","r","useEffect","recipeJSON","JSON","parse","localStorage","getItem","setItem","stringify","Provider","previousValue","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.599e5813.chunk.js","sourcesContent":["// jshint esversion:6\r\n\r\nconst recipes = [\r\n  {\r\n    id: 1,\r\n    name: \"Plain Chicken\",\r\n    cookingTime: \"1:45\",\r\n    servings: \"3\",\r\n    instructions: \"1. Put salt on chicken \\n2. Put chicken in oven \\n3. Eat chicken\",\r\n    ingredients: [\r\n      {\r\n        id: 1,\r\n        name: \"Chicken\",\r\n        amount: \"2 Pounds\"\r\n      },\r\n      {\r\n        id: 2,\r\n        name: \"Salt\",\r\n        amount: \"1 Tbs\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Plain Pork\",\r\n    cookingTime: \"3:45\",\r\n    servings: \"3\",\r\n    instructions: \"1. Put paparinka on pork \\n2. Put pork in oven \\n3. Eat pork\",\r\n    ingredients: [\r\n      {\r\n        id: 3,\r\n        name: \"Pork\",\r\n        amount: \"3 pounds\"\r\n      },\r\n      {\r\n        id: 4,\r\n        name: \"Paprika\",\r\n        amount: \"2 Tbs\"\r\n      }\r\n    ]\r\n  }\r\n]\r\n\r\nexport default recipes;","// jshint esversion:6\r\n\r\nimport React from \"react\";\r\n\r\nfunction Ingredient(props) {\r\n  \r\n  const {name, amount} = props\r\n  \r\n  return (\r\n    <>\r\n      <span>{name}</span>\r\n      <span>{amount}</span>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Ingredient;","// jshint esversion:6\r\nimport React from \"react\";\r\n\r\nimport Ingredient from \"./Ingredient\";\r\n\r\n\r\nfunction IngredientList(props) {\r\n  const ingredients = props.ingredientList;\r\n\r\n  return (\r\n    <>\r\n      {ingredients.map((ingredient) => {\r\n        return <Ingredient key={ingredient.id} {...ingredient} />\r\n      })}   \r\n    </>\r\n  )\r\n}\r\n\r\n\r\nexport default IngredientList;","// jshint esversion:6\r\nimport React from \"react\";\r\n\r\nimport IngredientList from \"./IngredientList\";\r\nimport {MyContext} from \"./App.jsx\"\r\n\r\nfunction Recipe(props) {\r\n  const {\r\n    id,\r\n    name, \r\n    cookingTime, \r\n    servings, \r\n    instructions,\r\n    ingredients\r\n  } = props;\r\n\r\n  const {handleSetRecipeId, handleRecipeDelete} = React.useContext(MyContext)\r\n  \r\n  return (\r\n    <div className=\"recipe\">\r\n      <div className=\"recipe__header\">\r\n        <h3 className=\"recipe__title\">{name}</h3>\r\n        <div>\r\n          <button \r\n            className=\"btn btn-pry mr-1\"\r\n            onClick={() => {\r\n              handleSetRecipeId(id);\r\n            }}\r\n          >\r\n          Edit\r\n          </button>\r\n          <button \r\n            className=\"btn btn-danger\"\r\n            onClick={() => {\r\n                handleRecipeDelete(id)\r\n            }} \r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"recipe_row\">\r\n        <span className=\"recipe_label\">Cooking Time:</span>\r\n        <span className=\"recipe_value\"> {cookingTime}</span>\r\n      </div>\r\n      <div className=\"recipe_row\">\r\n        <span className=\"recipe_label\">Servings:</span>\r\n        <span className=\"recipe_value\"> {servings}</span>\r\n      </div>\r\n      <div className=\"recipe_row\">\r\n        <span className=\"recipe_label\">Instructions:</span>\r\n        <div className=\"recipe_value recipe_instructions recipe_value--indented\"> {instructions}</div>\r\n      </div>\r\n      <div className=\"recipe_row\">\r\n        <span className=\"recipe_label\">Ingredients:</span>\r\n        <div className=\"recipe_value recipe_value--indented recipe__ingredients\">\r\n          <IngredientList ingredientList={ingredients} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Recipe;","// jshint esversion:6\r\nimport React from \"react\";\r\n\r\nimport Recipe from \"./Recipe.jsx\";\r\n\r\nfunction RecipeList(props) {\r\n  return (\r\n    <div className=\"recipe-list\">\r\n      <div>\r\n        {props.recipes.map((recipe) => {\r\n          return <Recipe key={recipe.id} {...recipe} />;\r\n        })}\r\n      </div>\r\n      <div className=\"recipe-list__add-recipe-btn-container\">\r\n        <button\r\n          className=\"btn btn-pry recipe_add-btn\"\r\n          onClick={props.handleRecipeAdd}\r\n        >\r\n          Add recipe\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RecipeList;\r\n","// jshint esversion:6\r\nimport React from \"react\";\r\n\r\nfunction IngredientEdit(props) {\r\n  \r\n  const {\r\n    ingredient,  // Ingredient Object\r\n    removeIngredient\r\n  } = props\r\n\r\n  function handleChange(change) {\r\n    const newIngredient = {...ingredient, ...change};  \r\n    props.handleIngredientChange(newIngredient.id, newIngredient)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <input \r\n        type=\"text\" \r\n        className=\"recipe-edit__input\"\r\n        onChange={(e) => handleChange({name: e.target.value})}\r\n        value={ingredient.name} />\r\n      <input \r\n        type=\"text\" \r\n        className=\"recipe-edit__input\"\r\n        onChange={(e) => handleChange({amount: e.target.value})}\r\n        value={ingredient.amount} />\r\n      <button \r\n        className=\"btn btn-danger\"\r\n        onClick={() => {\r\n          removeIngredient(ingredient.id)\r\n        }} \r\n      >\r\n        &times;\r\n      </button>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default IngredientEdit;","// jshint esversion:6\r\nimport React from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\"; // randon string for id\r\n\r\nimport IngredientEdit from \"./IngredientEdit\";\r\nimport { MyContext } from \"./App.jsx\";\r\n\r\nfunction RecipeEdit(props) {\r\n  const recipe = props.recipe;\r\n\r\n  const { handleRecipeChange, handleSetRecipeId } = React.useContext(MyContext);\r\n\r\n  function handleChange(change) {\r\n    const newRecipe = { ...recipe, ...change };\r\n    handleRecipeChange(newRecipe.id, newRecipe);\r\n  }\r\n\r\n  function handleIgredientChange(id, ingredient) {\r\n    const newIngredientList = [...recipe.ingredients];\r\n    const editIngredientIndex = newIngredientList.findIndex((i) => i.id === id);\r\n    newIngredientList[editIngredientIndex] = ingredient;\r\n    handleChange({ ingredients: newIngredientList });\r\n  }\r\n  \r\n  function addIngredient() {\r\n    const newIngredient = {\r\n      id: uuidv4(),\r\n      name: \"\",\r\n      amount: \"\",\r\n    };\r\n    handleChange({ingredients: [...recipe.ingredients, newIngredient]});\r\n  }\r\n  \r\n  function removeIngredient(id) {\r\n    const newIngredientList = recipe.ingredients.filter((recipeIngredient) => recipeIngredient.id !== id);\r\n    handleChange({ ingredients: newIngredientList });\r\n  }\r\n\r\n  return (\r\n    <div className=\"recipe-edit\">\r\n      <div className=\"recipe-edit__remove-btn-container\">\r\n        <button\r\n          className=\"btn recipe-edit__remove-btn\"\r\n          onClick={() => {\r\n            handleSetRecipeId(undefined);\r\n          }}\r\n        >\r\n          &times;\r\n        </button>\r\n      </div>\r\n      <div className=\"recipe-edit__details-grid\">\r\n        <label className=\"recipe-edit__label\" name=\"name\">\r\n          Name\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"recipe-edit__input\"\r\n          onChange={(e) => handleChange({ name: e.target.value })}\r\n          value={recipe.name}\r\n        />\r\n        <label className=\"recipe-edit__label\" name=\"name\">\r\n          Cook Time\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"recipe-edit__input\"\r\n          onChange={(e) => handleChange({ cookingTime: e.target.value })}\r\n          value={recipe.cookingTime}\r\n        />\r\n        <label className=\"recipe-edit__label\" name=\"name\">\r\n          Servings\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"recipe-edit__input\"\r\n          onChange={(e) =>\r\n            handleChange({ servings: parseInt(e.target.value || \"0\") })\r\n          }\r\n          value={recipe.servings}\r\n        />\r\n        <label className=\"recipe-edit__label\" name=\"name\">\r\n          Instructions\r\n        </label>\r\n        <textarea\r\n          className=\"recipe-edit__input\"\r\n          onChange={(e) => handleChange({ instructions: e.target.value })}\r\n          value={recipe.instructions}\r\n        ></textarea>\r\n      </div>\r\n\r\n      <div className=\"recipe-edit__ingredients-container\">\r\n        <label className=\"recipe-edit__label\">Ingredients</label>\r\n        <div className=\"recipe-edit__ingredients-grid\">\r\n          <div>Name</div>\r\n          <div>Amount</div>\r\n          <div></div>\r\n          {recipe.ingredients.map((recipeIngredient) => {\r\n            return (\r\n              <IngredientEdit\r\n                key={recipeIngredient.id}\r\n                ingredient={recipeIngredient}\r\n                removeIngredient={removeIngredient}\r\n                handleIngredientChange={handleIgredientChange}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n      <div className=\"recipe-edit__add-ingredients-btn-container\">\r\n        <button \r\n          className=\"btn btn-pry\"\r\n          onClick={addIngredient} \r\n        >\r\n          Add ingredient\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RecipeEdit;","// jshint esversion:6\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\"; // randon string for id\r\n\r\nimport \"../css/App.css\";  // Style sheet\r\nimport recipeProps from \"../RecipesDB.js\"; // data from DB\r\nimport RecipeList from \"./RecipeList\"; // Recipe list Component containing all recipe components\r\nimport RecipeEdit from \"./RecipeEdit.jsx\"; // Recipe Edit component\r\n\r\n// For storage persistance\r\nconst LOCAL_STORAGE_KEY = \"cookingWithReact.recipes\";\r\n\r\n// Context to pass props between components\r\nexport const MyContext = React.createContext();\r\n\r\nfunction App() {\r\n\r\n  const [selectRecipeId, setSelectRecipeId] = useState(); // Get the id to edit a recipe \r\n  const [recipes, setRecipes] = useState(recipeProps);\r\n\r\n  const selectedRecipe = recipes.find(recipe => recipe.id ===  selectRecipeId);\r\n  \r\n  // Different context values to be used in provider function\r\n  const contextValue = {\r\n    handleRecipeDelete,\r\n    handleSetRecipeId,\r\n    handleRecipeChange\r\n  }\r\n\r\n  // Get initial data from local storage\r\n  useEffect(() => {\r\n    const recipeJSON = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\r\n    if (recipeJSON) {\r\n      setRecipes(recipeJSON);\r\n    }\r\n  }, []);\r\n\r\n  // Save changes made to local storage\r\n  useEffect(() => {\r\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(recipes));\r\n  }, [recipes]);\r\n\r\n  // Add a new item\r\n  function handleRecipesAdd() {\r\n    const newRecipe = {\r\n      id: uuidv4(),\r\n      name: \"Name\",\r\n      cookingTime: \"\",\r\n      servings: \"0\",\r\n      instructions: \"\",\r\n      ingredients: [\r\n        {\r\n          id: uuidv4(),\r\n          name: \"\",\r\n          amount: \"\",\r\n        },\r\n      ],\r\n    };\r\n    setRecipes((previousValue) => {\r\n      console.log(\"A state change was recorded\");\r\n      return [...previousValue, newRecipe];\r\n    });\r\n    handleSetRecipeId(newRecipe.id);\r\n  }\r\n\r\n  // Delete a recipe\r\n  function handleRecipeDelete(id) {\r\n    const newRecipeList = recipes.filter(recipe => recipe.id !== id );\r\n    // Remove any existing recipe in edit\r\n    setSelectRecipeId(undefined);\r\n    // Render new recipe list\r\n    setRecipes(newRecipeList);\r\n  }\r\n\r\n  // Set the selectedRecipe id to edit\r\n  function handleSetRecipeId(id) {\r\n    setSelectRecipeId(id);\r\n  }\r\n\r\n  // Find and edit existing recipe with new one\r\n  function handleRecipeChange(id, recipe) {\r\n    const newRecipeList = [...recipes];\r\n    const editRecipeIndex = newRecipeList.findIndex(r => r.id === id);\r\n    newRecipeList[editRecipeIndex] = recipe;\r\n    setRecipes(newRecipeList);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <MyContext.Provider value={contextValue}>\r\n        <RecipeList recipes={recipes} handleRecipeAdd={handleRecipesAdd} />\r\n        {selectRecipeId && <RecipeEdit recipe={selectedRecipe} />}\r\n      </MyContext.Provider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;","// jshint esversion:6\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./components/App.jsx\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}